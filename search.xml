<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/10/17/hello-world/"/>
      <url>/2021/10/17/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>运动想象算法学习记录</title>
      <link href="/2021/04/08/%E8%BF%90%E5%8A%A8%E6%83%B3%E8%B1%A1%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
      <url>/2021/04/08/%E8%BF%90%E5%8A%A8%E6%83%B3%E8%B1%A1%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h3 id="BCI技术赛运动想象主流算法"><a href="#BCI技术赛运动想象主流算法" class="headerlink" title="BCI技术赛运动想象主流算法"></a>BCI技术赛运动想象主流算法</h3><h4 id="一、运动想象脑机接口原理简介"><a href="#一、运动想象脑机接口原理简介" class="headerlink" title="一、运动想象脑机接口原理简介"></a>一、运动想象脑机接口原理简介</h4><p>&emsp;&emsp;<br>运动想象（Motor&ensp;Imagery，MI),即人在想象自己肢体（或肌肉）运动但没有实际运动输出时，人的特定脑区仍会有激活。目前常见的运动想象部位<br>为：左手，右手，双脚和舌头。运动想象的过程中，大脑皮层会产生两种变化明显的节律信号，对侧脑电节律能量会明显降低，而同侧运动感觉区的脑电节律能量增大，ERD/ERS。（1979&ensp;Pfurtscheller&ensp;and&ensp;Aranibar)</p>]]></content>
      
      
      <categories>
          
          <category> 脑机接口 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脑机接口 </tag>
            
            <tag> 运动想象 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tensorflow笔记-自动终止训练</title>
      <link href="/2021/02/28/Tensorflow%E7%AC%94%E8%AE%B0-%E8%87%AA%E5%8A%A8%E7%BB%88%E6%AD%A2%E8%AE%AD%E7%BB%83/"/>
      <url>/2021/02/28/Tensorflow%E7%AC%94%E8%AE%B0-%E8%87%AA%E5%8A%A8%E7%BB%88%E6%AD%A2%E8%AE%AD%E7%BB%83/</url>
      
        <content type="html"><![CDATA[<p>在Tensorflow中，可以通过callbacks方法自动终止神经网络模型的训练。</p><p>具体做法如下：先定义一个类，这个类从tf.keras.callbacks.Callback这个类里继承。<br>关于tf.keras.callbacks.Callback这个类的一些方法，可以查看tensorflow的官方文档：<a href="https://tensorflow.google.cn/versions/r2.1/api_docs/python/tf/keras/callbacks/Callback">More info</a></p><p>在我们自定义的类里面可以替换tf.keras.callbacks.Callback的一些方法。</p><p>下面以minst数据集的图片分类训练过程进行示例：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> tensorflow <span class="token keyword">import</span> keras<span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf<span class="token keyword">class</span> <span class="token class-name">myCallback</span><span class="token punctuation">(</span>tf<span class="token punctuation">.</span>keras<span class="token punctuation">.</span>callbacks<span class="token punctuation">.</span>Callback<span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token comment">#类的继承</span>    <span class="token keyword">def</span> <span class="token function">on_epoch_end</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>epoch<span class="token punctuation">,</span>logs<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>logs<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'loss'</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">0.4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token comment">#loss小于0.4则终止训练</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\nLoss is low so cancelling training!"</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>model<span class="token punctuation">.</span>stop_training <span class="token operator">=</span> <span class="token boolean">True</span>callbacks <span class="token operator">=</span> myCallback<span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token comment">#生成一个类的实例</span>fashion_mnist<span class="token operator">=</span>keras<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>fashion_mnist<span class="token punctuation">(</span>train_images<span class="token punctuation">,</span>train_labels<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>test_images<span class="token punctuation">,</span>test_labels<span class="token punctuation">)</span><span class="token operator">=</span>fashion_mnist<span class="token punctuation">.</span>load_data<span class="token punctuation">(</span><span class="token punctuation">)</span>train_images_scaled <span class="token operator">=</span> train_images<span class="token operator">/</span><span class="token number">255.0</span>test_images_scaled <span class="token operator">=</span> test_images<span class="token operator">/</span><span class="token number">255.0</span>model <span class="token operator">=</span> keras<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Flatten<span class="token punctuation">(</span>input_shape<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">,</span>activation<span class="token operator">=</span>tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>relu<span class="token punctuation">)</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>add<span class="token punctuation">(</span>keras<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>Dense<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span>activation<span class="token operator">=</span>tf<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>softmax<span class="token punctuation">)</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span>optimizer<span class="token operator">=</span>tf<span class="token punctuation">.</span>optimizers<span class="token punctuation">.</span>Adam<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>loss<span class="token operator">=</span>tf<span class="token punctuation">.</span>losses<span class="token punctuation">.</span>sparse_categorical_crossentropy<span class="token punctuation">,</span>metrics<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'accuracy'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>train_images_scaled<span class="token punctuation">,</span>train_labels<span class="token punctuation">,</span>epochs<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>callbacks<span class="token operator">=</span><span class="token punctuation">[</span>callbacks<span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment">#参数传递</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>实际运行效果如下：<br><img src="https://cdn.jsdelivr.net/gh/Zavodovski/Pic_Image_Bed@main/images/20210228155248.2t8yfr6jy4s0.png" alt="image"></p>]]></content>
      
      
      <categories>
          
          <category> Tensorflow笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tensorflow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tensorflow笔记-踩坑</title>
      <link href="/2021/02/25/Tensorflow%E7%AC%94%E8%AE%B0-%E8%B8%A9%E5%9D%91-(%E4%B8%80%EF%BC%89/"/>
      <url>/2021/02/25/Tensorflow%E7%AC%94%E8%AE%B0-%E8%B8%A9%E5%9D%91-(%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h3 id="一-Function-call-stack-distributed-function"><a href="#一-Function-call-stack-distributed-function" class="headerlink" title="(一)Function call stack:distributed_function"></a>(一)Function call stack:distributed_function</h3><p>在训练神经网络模型时model.fit的时候报错：Function call stack:distributed_function<br>此时需要设置GPU显存按需申请，可以在程序前添加如下代码解决：</p><pre class="line-numbers language-python3" data-language="python3"><code class="language-python3">physical_devices &#x3D; tf.config.experimental.list_physical_devices(&#39;GPU&#39;)assert len(physical_devices) &gt; 0, &quot;Not enough GPU hardware devices available&quot;tf.config.experimental.set_memory_growth(physical_devices[0], True)tf.config.experimental.set_memory_growth(physical_devices[1], True)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>其中</p><pre class="line-numbers language-python3" data-language="python3"><code class="language-python3">tf.config.experimental.set_memory_growth(physical_devices[i], True)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>根据需根据设备的GPU数量而定，<em>i</em>取决于GPU的数量，有多少GPU就调用几次上述语句<br>如只有一个GPU，则可以按如下方式改写：</p><pre class="line-numbers language-python3" data-language="python3"><code class="language-python3">gpu &#x3D; tf.config.experimental.list_physical_devices(device_type&#x3D;&#39;GPU&#39;)assert len(gpu) &#x3D;&#x3D; 1tf.config.experimental.set_memory_growth(gpu[0], True)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="二-IProgress-not-found-Please-update-jupyter-and-ipywidgets"><a href="#二-IProgress-not-found-Please-update-jupyter-and-ipywidgets" class="headerlink" title="(二)IProgress not found. Please update jupyter and ipywidgets"></a>(二)IProgress not found. Please update jupyter and ipywidgets</h3><p>在jupyter notebook中运行代码时提示导入模块的报错信息：IProgress not found. Please update jupyter and ipywidgets.<br>ImportError: IProgress not found. Please update jupyter and ipywidgets. See <a href="https://ipywidgets.readthedocs.io/en/stable/user_install.html">https://ipywidgets.readthedocs.io/en/stable/user_install.html</a><br>在Anaconda Prompt中运行如下代码并重启jupyter notebook即可解决。</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">conda <span class="token function">install</span> -c conda-forge ipywidgetsjupyter nbextension <span class="token builtin class-name">enable</span> --py widgetsnbextension<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Tensorflow笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tensorflow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用MATLAB调用百度翻译API</title>
      <link href="/2021/02/22/%E7%94%A8MATLAB%E5%AE%9E%E7%8E%B0%E7%99%BE%E5%BA%A6%E7%BF%BB%E8%AF%91/"/>
      <url>/2021/02/22/%E7%94%A8MATLAB%E5%AE%9E%E7%8E%B0%E7%99%BE%E5%BA%A6%E7%BF%BB%E8%AF%91/</url>
      
        <content type="html"><![CDATA[<h3 id="在MATLAB中通过python调用百度翻译API"><a href="#在MATLAB中通过python调用百度翻译API" class="headerlink" title="在MATLAB中通过python调用百度翻译API"></a>在MATLAB中通过python调用百度翻译API</h3><p>在MATLAB中调用.py文件中的BaiduTranslate类实现百度翻译的功能。.py文件的代码如下：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> hashlib<span class="token keyword">import</span> http<span class="token punctuation">.</span>client<span class="token keyword">import</span> json<span class="token keyword">import</span> random<span class="token keyword">import</span> sys<span class="token keyword">from</span> urllib <span class="token keyword">import</span> parse<span class="token keyword">class</span> <span class="token class-name">BaiduTranslate</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> fromLang<span class="token punctuation">,</span> toLang<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>url <span class="token operator">=</span> <span class="token string">"/api/trans/vip/translate"</span>        self<span class="token punctuation">.</span>appid <span class="token operator">=</span> <span class="token string">""</span>  <span class="token comment"># 申请的账号复制到这里</span>        self<span class="token punctuation">.</span>secretKey <span class="token operator">=</span> <span class="token string">''</span>  <span class="token comment"># 申请账号的密码复制到这里</span>        self<span class="token punctuation">.</span>fromLang <span class="token operator">=</span> fromLang        self<span class="token punctuation">.</span>toLang <span class="token operator">=</span> toLang        self<span class="token punctuation">.</span>salt <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">32768</span><span class="token punctuation">,</span> <span class="token number">65536</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">BdTrans</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> text<span class="token punctuation">)</span><span class="token punctuation">:</span>        sign <span class="token operator">=</span> self<span class="token punctuation">.</span>appid <span class="token operator">+</span> text <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>salt<span class="token punctuation">)</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>secretKey        md <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token punctuation">)</span>        md<span class="token punctuation">.</span>update<span class="token punctuation">(</span>sign<span class="token punctuation">.</span>encode<span class="token punctuation">(</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        sign <span class="token operator">=</span> md<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>        myurl <span class="token operator">=</span> self<span class="token punctuation">.</span>url <span class="token operator">+</span> \                <span class="token string">'?appid='</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>appid <span class="token operator">+</span> \                <span class="token string">'&amp;q='</span> <span class="token operator">+</span> parse<span class="token punctuation">.</span>quote<span class="token punctuation">(</span>text<span class="token punctuation">)</span> <span class="token operator">+</span> \                <span class="token string">'&amp;from='</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>fromLang <span class="token operator">+</span> \                <span class="token string">'&amp;to='</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>toLang <span class="token operator">+</span> \                <span class="token string">'&amp;salt='</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>salt<span class="token punctuation">)</span> <span class="token operator">+</span> \                <span class="token string">'&amp;sign='</span> <span class="token operator">+</span> sign        <span class="token keyword">try</span><span class="token punctuation">:</span>            httpClient <span class="token operator">=</span> http<span class="token punctuation">.</span>client<span class="token punctuation">.</span>HTTPConnection<span class="token punctuation">(</span><span class="token string">'api.fanyi.baidu.com'</span><span class="token punctuation">)</span>            httpClient<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">'GET'</span><span class="token punctuation">,</span> myurl<span class="token punctuation">)</span>            response <span class="token operator">=</span> httpClient<span class="token punctuation">.</span>getresponse<span class="token punctuation">(</span><span class="token punctuation">)</span>            html <span class="token operator">=</span> response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>            html <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>html<span class="token punctuation">)</span>            dst <span class="token operator">=</span> html<span class="token punctuation">[</span><span class="token string">"trans_result"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"dst"</span><span class="token punctuation">]</span>            <span class="token keyword">return</span> <span class="token boolean">True</span><span class="token punctuation">,</span> dst        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token boolean">False</span><span class="token punctuation">,</span> e<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    a<span class="token operator">=</span>BaiduTranslate<span class="token punctuation">(</span><span class="token string">'zh'</span><span class="token punctuation">,</span><span class="token string">'en'</span><span class="token punctuation">)</span>    <span class="token comment">#b=sys.argv[1]</span>    b<span class="token operator">=</span><span class="token string">' '</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>BdTrans<span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>MATLAB脚本文件代码如下：</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">wenzi <span class="token operator">=</span> "床前明月光"command <span class="token operator">=</span> <span class="token function">sprintf</span><span class="token punctuation">(</span>"python C<span class="token operator">:</span><span class="token operator">\</span><span class="token operator">\</span>Users<span class="token operator">\</span><span class="token operator">\</span>HP<span class="token operator">\</span><span class="token operator">\</span>Downloads<span class="token operator">\</span><span class="token operator">\</span>Baidu_translation<span class="token punctuation">.</span>py <span class="token comment">%s", wenzi)</span><span class="token punctuation">[</span><span class="token operator">~</span><span class="token punctuation">,</span>cmdout<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">system</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>命令行输出结果如下：</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">wenzi <span class="token operator">=</span> "床前明月光"command <span class="token operator">=</span> <span class="token function">sprintf</span><span class="token punctuation">(</span>"python C<span class="token operator">:</span><span class="token operator">\</span><span class="token operator">\</span>Users<span class="token operator">\</span><span class="token operator">\</span>HP<span class="token operator">\</span><span class="token operator">\</span>Downloads<span class="token operator">\</span><span class="token operator">\</span>Baidu_translation<span class="token punctuation">.</span>py <span class="token comment">%s", wenzi)</span><span class="token punctuation">[</span><span class="token operator">~</span><span class="token punctuation">,</span>cmdout<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">system</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span>wenzi <span class="token operator">=</span>     "床前明月光"command <span class="token operator">=</span>     "python C<span class="token operator">:</span><span class="token operator">\</span>Users<span class="token operator">\</span>HP<span class="token operator">\</span>Downloads<span class="token operator">\</span>Baidu_translation<span class="token punctuation">.</span>py 床前明月光"cmdout <span class="token operator">=</span>    <span class="token string">'(True, '</span>abed<span class="token punctuation">,</span> I see a silver light<span class="token operator">'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用disp函数简化命令行输出：</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">clcwenzi <span class="token operator">=</span> "床前明月光"<span class="token punctuation">;</span>command <span class="token operator">=</span> <span class="token function">sprintf</span><span class="token punctuation">(</span>"python C<span class="token operator">:</span><span class="token operator">\</span><span class="token operator">\</span>Users<span class="token operator">\</span><span class="token operator">\</span>HP<span class="token operator">\</span><span class="token operator">\</span>Downloads<span class="token operator">\</span><span class="token operator">\</span>Baidu_translation<span class="token punctuation">.</span>py <span class="token comment">%s", wenzi);</span><span class="token punctuation">[</span><span class="token operator">~</span><span class="token punctuation">,</span>cmdout<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">system</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">disp</span><span class="token punctuation">(</span><span class="token function">cmdout</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>命令行输出结果如下：</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">abed<span class="token punctuation">,</span> I see a silver light<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="功能强化"><a href="#功能强化" class="headerlink" title="功能强化"></a>功能强化</h3><p>tips:使用clipboard函数可以实现自动读取剪贴板内容进行翻译</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">clcwenzi <span class="token operator">=</span> <span class="token function">clipboard</span><span class="token punctuation">(</span>"paste"<span class="token punctuation">)</span><span class="token punctuation">;</span>command <span class="token operator">=</span> <span class="token function">sprintf</span><span class="token punctuation">(</span>"python C<span class="token operator">:</span><span class="token operator">\</span><span class="token operator">\</span>Users<span class="token operator">\</span><span class="token operator">\</span>HP<span class="token operator">\</span><span class="token operator">\</span>Downloads<span class="token operator">\</span><span class="token operator">\</span>Baidu_translation<span class="token punctuation">.</span>py <span class="token comment">%s", wenzi);</span><span class="token punctuation">[</span><span class="token operator">~</span><span class="token punctuation">,</span>cmdout<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">system</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">disp</span><span class="token punctuation">(</span><span class="token function">cmdout</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> MATLAB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MATLAB与Python交互</title>
      <link href="/2021/02/22/MABLAB%E4%B8%8EPython%E4%BA%A4%E4%BA%92%E2%80%9C/"/>
      <url>/2021/02/22/MABLAB%E4%B8%8EPython%E4%BA%A4%E4%BA%92%E2%80%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="在MATLAB中运行-py文件"><a href="#在MATLAB中运行-py文件" class="headerlink" title="在MATLAB中运行.py文件"></a>在MATLAB中运行.py文件</h2><p>MATLAB中可以直接调用.py文件，运行.py文件中的python代码，具体调用格式如下：</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token punctuation">[</span>status<span class="token punctuation">,</span>cmdout<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">system</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token comment">% status为运行状态，cmdout记录每一次的输出</span><span class="token comment">%&#123; </span>   command的格式如下：    python argv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> argv<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">...</span>    其中agrv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>为py文件的路径，argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>argv<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">...</span>为<span class="token punctuation">.</span>py文件的传入参数 <span class="token comment">%&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>.py文件中需要导入sys库</p><pre class="line-numbers language-python3" data-language="python3"><code class="language-python3">import syssys.argv #MATLAB中的argv参数会赋值给sys.argv<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/Zavodovski/Pic_Image_Bed@main/images/20210228155112.29wiqtr2fvy8.png" alt="image"></p><h2 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h2><p>python脚本文件代码如下，简单的加法函数：</p><pre class="line-numbers language-python3" data-language="python3"><code class="language-python3">import sysdef add(a,b):    return a+bif __name__ &#x3D;&#x3D; &#39;__main__&#39;:    a &#x3D; sys.argv[1]    b &#x3D; sys.argv[2]    print(sys.argv)    print(add(a,b))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>MATLAB脚本文件代码如下，其中文件路径可根据具体文件替换:</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">command <span class="token operator">=</span> "python C<span class="token operator">:</span><span class="token operator">\</span>Users<span class="token operator">\</span>HP<span class="token operator">\</span>Downloads<span class="token operator">\</span>add<span class="token punctuation">.</span>py <span class="token number">4.1111</span> <span class="token number">3.567</span>"<span class="token punctuation">[</span><span class="token operator">~</span><span class="token punctuation">,</span>cmdout<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">system</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>MATLAB中命令行窗口执行结果如下：</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> command <span class="token operator">=</span> "python C<span class="token operator">:</span><span class="token operator">\</span>Users<span class="token operator">\</span>HP<span class="token operator">\</span>Downloads<span class="token operator">\</span>add<span class="token punctuation">.</span>py <span class="token number">4.1111</span> <span class="token number">3.567</span>"<span class="token punctuation">[</span><span class="token operator">~</span><span class="token punctuation">,</span>cmdout<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">system</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span>command <span class="token operator">=</span>     "python C<span class="token operator">:</span><span class="token operator">\</span>Users<span class="token operator">\</span>HP<span class="token operator">\</span>Downloads<span class="token operator">\</span>add<span class="token punctuation">.</span>py <span class="token number">4.1111</span> <span class="token number">3.567</span>"cmdout <span class="token operator">=</span>    <span class="token string">'['</span>C<span class="token operator">:</span><span class="token operator">\</span><span class="token operator">\</span>Users<span class="token operator">\</span><span class="token operator">\</span>HP<span class="token operator">\</span><span class="token operator">\</span>Downloads<span class="token operator">\</span><span class="token operator">\</span>add<span class="token punctuation">.</span>py<span class="token operator">'</span><span class="token punctuation">,</span> <span class="token string">'4.1111'</span><span class="token punctuation">,</span> <span class="token string">'3.567'</span><span class="token punctuation">]</span>     <span class="token number">4.11113</span><span class="token number">.567</span>     <span class="token operator">'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看出.py文件地址对应sys.argv[0]，4.1111和3.567分别对应sys.argv[1],sys.argv[2],并且两个参数在.py文件中被默认当成字符串，因此得到4.11113.567的结果<br>将python代码作如下修改：</p><pre class="line-numbers language-python3" data-language="python3"><code class="language-python3">import sysimport decimaldef add(a,b):    return a+bif __name__ &#x3D;&#x3D; &#39;__main__&#39;:    a &#x3D; decimal.Decimal(sys.argv[1])    b &#x3D; decimal.Decimal(sys.argv[2])    print(sys.argv)    print(add(a,b))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在MATLAB中再次运行，命令行窗口输出结果如下：</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token operator">></span><span class="token operator">></span> command <span class="token operator">=</span> "python C<span class="token operator">:</span><span class="token operator">\</span>Users<span class="token operator">\</span>HP<span class="token operator">\</span>Downloads<span class="token operator">\</span>add<span class="token punctuation">.</span>py <span class="token number">4.1111</span> <span class="token number">3.567</span>"<span class="token punctuation">[</span><span class="token operator">~</span><span class="token punctuation">,</span>cmdout<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">system</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span>command <span class="token operator">=</span>     "python C<span class="token operator">:</span><span class="token operator">\</span>Users<span class="token operator">\</span>HP<span class="token operator">\</span>Downloads<span class="token operator">\</span>add<span class="token punctuation">.</span>py <span class="token number">4.1111</span> <span class="token number">3.567</span>"cmdout <span class="token operator">=</span>    <span class="token string">'['</span>C<span class="token operator">:</span><span class="token operator">\</span><span class="token operator">\</span>Users<span class="token operator">\</span><span class="token operator">\</span>HP<span class="token operator">\</span><span class="token operator">\</span>Downloads<span class="token operator">\</span><span class="token operator">\</span>add<span class="token punctuation">.</span>py<span class="token operator">'</span><span class="token punctuation">,</span> <span class="token string">'4.1111'</span><span class="token punctuation">,</span> <span class="token string">'3.567'</span><span class="token punctuation">]</span>     <span class="token number">7.6781</span>     <span class="token operator">'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看出MATLAB成功调用.py文件实现加法功能，MATLAB中返回得到的结果仍为一个字符串。</p><p>tips：MATLAB脚本文件中可以使用sprintf函数的占位符进行格式化输出，实现参数前置，但需添加转义字符</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">argv1 <span class="token operator">=</span> <span class="token number">4.1111</span>argv2 <span class="token operator">=</span> <span class="token number">0.8754</span>command <span class="token operator">=</span> <span class="token function">sprintf</span><span class="token punctuation">(</span>"python C<span class="token operator">:</span><span class="token operator">\</span><span class="token operator">\</span>Users<span class="token operator">\</span><span class="token operator">\</span>HP<span class="token operator">\</span><span class="token operator">\</span>Downloads<span class="token operator">\</span><span class="token operator">\</span>add<span class="token punctuation">.</span>py <span class="token comment">%s %s", argv1,argv2)</span><span class="token punctuation">[</span><span class="token operator">~</span><span class="token punctuation">,</span>cmdout<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">system</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>在MATLAB中再次运行，命令行窗口输出结果如下：</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">argv1 <span class="token operator">=</span> <span class="token number">4.1111</span>argv2 <span class="token operator">=</span> <span class="token number">0.8754</span>command <span class="token operator">=</span> <span class="token function">sprintf</span><span class="token punctuation">(</span>"python C<span class="token operator">:</span><span class="token operator">\</span><span class="token operator">\</span>Users<span class="token operator">\</span><span class="token operator">\</span>HP<span class="token operator">\</span><span class="token operator">\</span>Downloads<span class="token operator">\</span><span class="token operator">\</span>add<span class="token punctuation">.</span>py <span class="token comment">%s %s", argv1,argv2)</span><span class="token punctuation">[</span><span class="token operator">~</span><span class="token punctuation">,</span>cmdout<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">system</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span>argv1 <span class="token operator">=</span>    <span class="token number">4.1111</span>argv2 <span class="token operator">=</span>    <span class="token number">0.8754</span>command <span class="token operator">=</span>     "python C<span class="token operator">:</span><span class="token operator">\</span>Users<span class="token operator">\</span>HP<span class="token operator">\</span>Downloads<span class="token operator">\</span>add<span class="token punctuation">.</span>py <span class="token number">4.111100e+00</span> <span class="token number">8.754000e-01</span>"cmdout <span class="token operator">=</span>    <span class="token string">'['</span>C<span class="token operator">:</span><span class="token operator">\</span><span class="token operator">\</span>Users<span class="token operator">\</span><span class="token operator">\</span>HP<span class="token operator">\</span><span class="token operator">\</span>Downloads<span class="token operator">\</span><span class="token operator">\</span>add<span class="token punctuation">.</span>py<span class="token operator">'</span><span class="token punctuation">,</span> <span class="token string">'4.111100e+00'</span><span class="token punctuation">,</span> <span class="token string">'8.754000e-01'</span><span class="token punctuation">]</span>     <span class="token number">4.9865000</span>     <span class="token operator">'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用clc和disp函数简化命令行输出：</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">argv1 <span class="token operator">=</span> <span class="token number">4.1111</span>argv2 <span class="token operator">=</span> <span class="token number">0.8754</span>clccommand <span class="token operator">=</span> <span class="token function">sprintf</span><span class="token punctuation">(</span>"python C<span class="token operator">:</span><span class="token operator">\</span><span class="token operator">\</span>Users<span class="token operator">\</span><span class="token operator">\</span>HP<span class="token operator">\</span><span class="token operator">\</span>Downloads<span class="token operator">\</span><span class="token operator">\</span>add<span class="token punctuation">.</span>py <span class="token comment">%s %s", argv1,argv2);</span><span class="token punctuation">[</span><span class="token operator">~</span><span class="token punctuation">,</span>cmdout<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">system</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">disp</span><span class="token punctuation">(</span>cmdout<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此时命令行只输出最后结果：4.9865000</p>]]></content>
      
      
      <categories>
          
          <category> MATLAB </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MATLAB </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jupyternotebook代码补全提示</title>
      <link href="/2021/02/21/Jupyternotebook%E4%BB%A3%E7%A0%81%E8%A1%A5%E5%85%A8/"/>
      <url>/2021/02/21/Jupyternotebook%E4%BB%A3%E7%A0%81%E8%A1%A5%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<p>在Jupyternotebook的首行添加如下代码可实现代码自动补全的功能：</p><pre class="line-numbers language-python3" data-language="python3"><code class="language-python3">%config IPCompleter.greedy &#x3D; True  #TAB键代码自动提示<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>后续代码按TAB键可出现代码自动提示</p>]]></content>
      
      
      <categories>
          
          <category> Tensorflow笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tensorflow </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
